<?php
include __DIR__ . "/../config/db.php";
session_start();

// ===== KI·ªÇM TRA ƒêƒÇNG NH·∫¨P =====
if (!isset($_SESSION['ID_user'])) {
    echo json_encode(['success' => false, 'message' => '‚ö†Ô∏è Vui l√≤ng ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi th√™m s·∫£n ph·∫©m!']);
    exit;
}

$User_ID = $_SESSION['ID_user'];

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'orderNow') {
    $product_id = intval($_POST['product_id']);
    $quantity_to_add = intval($_POST['quantity'] ?? 1);

    if ($quantity_to_add <= 0) {
        echo json_encode(['success' => false, 'message' => '‚ùå S·ªë l∆∞·ª£ng kh√¥ng h·ª£p l·ªá!']);
        exit;
    }

    // üîπ L·∫•y th√¥ng tin s·∫£n ph·∫©m
    $stmt = $conn->prepare("SELECT * FROM products WHERE id_product = :id");
    $stmt->execute(['id' => $product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$product) {
        echo json_encode(['success' => false, 'message' => '‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m!']);
        exit;
    }

    // üîπ Ki·ªÉm tra t·ªìn kho
    if ($product['quantitySold'] >= $product['totalquantity']) {
        echo json_encode(['success' => false, 'message' => '‚ùå S·∫£n ph·∫©m ƒë√£ h·∫øt h√†ng, kh√¥ng th·ªÉ th√™m v√†o gi·ªè!']);
        exit;
    }

    // üîπ Ch·ªçn ·∫£nh h·ª£p l·ªá
    $imagePath = $product['images'] ?: ($product['image1'] ?: ($product['image2'] ?: '../images/no-image.jpg'));

    // ==============================
    // üß† PH·∫¶N 1: L∆∞u v√†o SESSION
    // ==============================
    if (!isset($_SESSION['cart'])) $_SESSION['cart'] = [];

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity_to_add;
    } else {
        $_SESSION['cart'][$product_id] = [
            'id'       => $product['id_product'],
            'name'     => $product['products_name'],
            'price'    => $product['price'],
            'image'    => $imagePath,
            'quantity' => $quantity_to_add
        ];
    }

    // ==============================
    // üíæ PH·∫¶N 2: L∆∞u v√†o DATABASE (b·∫£ng user_carts)
    // ==============================
    // ‚öôÔ∏è Ki·ªÉm tra xem s·∫£n ph·∫©m n√†y ƒë√£ c√≥ trong gi·ªè c·ªßa user ch∆∞a
    $check = $conn->prepare("SELECT * FROM user_carts WHERE User_ID = :uid AND Product_ID = :pid");
    $check->execute(['uid' => $User_ID, 'pid' => $product_id]);
    $existing = $check->fetch(PDO::FETCH_ASSOC);

    // T√≠nh t·ªïng ti·ªÅn c·ªßa s·∫£n ph·∫©m n√†y
    $price = $product['price'];
    $totalToAdd = $price * $quantity_to_add;

    if ($existing) {
        // N·∫øu ƒë√£ c√≥ ‚Üí c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng v√† t·ªïng ti·ªÅn
        $newQty = $existing['quantity'] + $quantity_to_add;
        $newTotal = $existing['totalamount'] + $totalToAdd;

        $update = $conn->prepare("
            UPDATE user_carts 
            SET quantity = :qty, totalamount = :total 
            WHERE User_ID = :uid AND Product_ID = :pid
        ");
        $update->execute([
            'qty'   => $newQty,
            'total' => $newTotal,
            'uid'   => $User_ID,
            'pid'   => $product_id
        ]);
    } else {
        // N·∫øu ch∆∞a c√≥ ‚Üí th√™m m·ªõi
        $insert = $conn->prepare("
            INSERT INTO user_carts (quantity, totalamount, User_ID, Product_ID, order_date)
            VALUES (:qty, :total, :uid, :pid, NOW())
        ");
        $insert->execute([
            'qty'   => $quantity_to_add,
            'total' => $totalToAdd,
            'uid'   => $User_ID,
            'pid'   => $product_id
        ]);
    }

    // ‚úÖ ƒê·∫øm s·ªë lo·∫°i s·∫£n ph·∫©m trong session
    $cart_count = count($_SESSION['cart']);

    echo json_encode([
        'success' => true,
        'message' => 'üõí ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!',
        'cart_count' => $cart_count
    ]);
    exit;
}
?>
